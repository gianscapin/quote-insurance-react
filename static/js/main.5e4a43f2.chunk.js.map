{"version":3,"sources":["components/Header.js","components/Form.js","helpers.js","components/Resume.js","components/Result.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContainerHeader","styled","header","TextHeader","h1","Header","title","Field","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Form","saveResume","saveLoading","useState","brand","year","plan","dates","saveDates","error","saveError","getInfo","e","target","name","value","onSubmit","preventDefault","trim","result","substraction","Date","getFullYear","getSubstractionYear","brandCalculated","calculateBrand","quoted","parseFloat","toFixed","calculatePlan","setTimeout","quote","Number","onChange","type","checked","ContainerResume","Resume","Message","p","ResultQuote","TextQuote","Result","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Container","ContainerForm","App","resume","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e4a43f2.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst ContainerHeader = styled.header`\n    background-color : #26C6DA;\n    padding: 10px;\n    font-weight: bold;\n    color: #FFFFFF;\n`;\n\nconst TextHeader = styled.h1`\n    font-size:2rem;\n    margin:0;\n    font-family:'Slabo 27px',serif;\n    text-align:center;\n`;\n\n\nconst Header = ({title}) => {\n    return ( \n        <ContainerHeader>\n            <TextHeader>{title}</TextHeader>\n        </ContainerHeader>\n     );\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n \nexport default Header;","import React, {useState} from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport {getSubstractionYear,calculateBrand,calculatePlan} from '../helpers';\n\nconst Field = styled.div`\n    display:flex;\n    margin-bottom:1rem;\n    align-items:center;\n`;\n\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n    display:block;\n    width:100%;\n    padding:1rem;\n    border:1px solid #e1e1e1;\n    -webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n\n`;\n\nconst Button = styled.button`\n    background-color: #00838F;\n    font-size: 16px;\n    width:100%;\n    padding:1rem;\n    color:#fff;\n    text-transform:uppercase;\n    font-weight: bold;\n    border: none;\n    transition: background-color .3s ease;\n    margin-top:2rem;\n\n    &:hover{\n        background-color: #26C6DA;\n        cursor:pointer;\n    }\n`;\n\nconst Error = styled.div`\n    background-color:red;\n    color:white;\n    padding:1rem;\n    width:100%;\n    text-align:center;\n    margin-bottom:2rem;\n`;\n\nconst Form = ({saveResume, saveLoading}) => {\n\n    const [ dates, saveDates] = useState({\n        brand:'',\n        year:'',\n        plan:''\n    });\n\n    const [error,saveError] = useState(false);\n\n    const {brand,year,plan} = dates;\n\n    // Leer datos del form y colocar en el state\n\n    const getInfo = e =>{\n        saveDates({\n            ...dates,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const quoteInsurance = e =>{\n        e.preventDefault();\n        \n        // validar\n\n        if(brand.trim() === '' || year.trim()==='' || plan.trim() === ''){\n            saveError(true);\n            return;\n        }\n        saveError(false);\n\n        // base de 2000\n        let result = 2000;\n\n        // obtener diferencia de años\n\n        const substraction = getSubstractionYear(year);\n\n        // por cada año se resta el 3%\n\n        result -= ((substraction*3) * result)/100;\n\n\n        // Marca americano = 15%\n        // Europeo = 30%\n        // Asiatico = 5%\n        let brandCalculated = calculateBrand(brand,result);\n\n        // básico aumenta 20%\n        \n        let quoted=calculatePlan(plan,brandCalculated);\n\n        saveLoading(true);\n        setTimeout(()=>{\n            saveLoading(false);\n            saveResume({\n                quote:Number(quoted),\n                dates\n            });\n        },3000);\n        \n\n    }\n\n    return ( \n        <form\n            onSubmit={quoteInsurance}\n        >\n            {error ? <Error>Todos los campos son obligatorios</Error>:null}\n            <Field>\n                <Label>Marca</Label>\n                <Select\n                    name=\"brand\"\n                    value={brand}\n                    onChange={getInfo}\n                >\n                    <option value=\"\">Seleccione</option>\n                    <option value=\"Americano\">Americano</option>\n                    <option value=\"Europeo\">Europeo</option>\n                    <option value=\"Asiatico\">Asiatico</option>\n                </Select>\n            </Field>\n\n            <Field>\n                <Label>Año</Label>\n                <Select\n                    name=\"year\"\n                    value={year}\n                    onChange={getInfo}\n                >\n                    <option value=\"\">Seleccione</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Field>\n            <Field>\n                <Label>Plan</Label>\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"Basic\"\n                    checked={plan === 'Basic'}\n                    onChange={getInfo}\n                />Básico\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"Full\"\n                    checked={plan === 'Full'}\n                    onChange={getInfo}\n                />Completo\n            </Field>\n            <Button type=\"submit\">Cotizar</Button>\n        </form>\n     );\n}\n\nForm.propTypes = {\n    saveResume: PropTypes.func.isRequired,\n    saveLoading: PropTypes.func.isRequired\n}\n \nexport default Form;","export function getSubstractionYear(year){\n    return new Date().getFullYear() - year;\n}\n\nexport function calculateBrand(brand,result){\n    switch (brand) {\n        case 'Americano':\n            result= result*1.15;\n            break;\n        case 'Europeo':\n            result=result*1.30;\n            break;\n        default:\n            result=result*1.05;\n            break;\n    }\n    return result;\n}\n\nexport function calculatePlan(plan,result){\n    if(plan==='Basic'){\n        result = result*1.20;\n    }else{\n        result = result*1.50;\n    }\n    return parseFloat(result).toFixed(2);\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst ContainerResume = styled.div`\n    padding:1rem;\n    text-align: center;\n    background-color: #00838F;\n    color: #FFF;\n    margin-top: 1rem;\n`;\n\n\n\nconst Resume = ({dates}) => {\n\n    const {brand,year,plan} = dates;\n    return ( \n        (brand!=='' || year !=='' || plan!=='') ?(\n            <ContainerResume>\n                <h2>Resumen de Cotización</h2>\n                <ul>\n                    <li>Marca: {brand}</li>\n                    <li>Año: {year}</li>\n                    <li>Plan: {plan}</li>\n                </ul>\n            </ContainerResume>\n        ):null\n     );\n}\n\nResume.propTypes = {\n    dates: PropTypes.object.isRequired\n}\n \nexport default Resume;","import React from 'react';\nimport styled from '@emotion/styled';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport Proptypes from 'prop-types';\n\nconst Message=styled.p`\n    background-color: rgb(127,224,237);\n    margin-top: 2rem;\n    padding: 1rem;\n    text-align: center;\n`;\n\nconst ResultQuote = styled.div`\n    text-align: center;\n    padding: .5rem;\n    border: 1px solid #26C6DA;\n    background-color: rgb(127,224,237);\n    margin-top: 1rem;\n    position: relative;\n`;\n\n\nconst TextQuote = styled.p`\n    color: #00838F;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin: 0;\n`;\n\nconst Result = ({quote}) => {\n\n    return ( \n        (quote>0)?(\n        <ResultQuote>\n            <TransitionGroup\n                component=\"span\"\n                className=\"resultado\"\n            >\n                <CSSTransition\n                    classNames=\"resultado\"\n                    key={quote}\n                    timeout={{enter:500,exit:500}}\n                >\n                    <TextQuote>La cotización es: $<span>{quote}</span></TextQuote>\n                </CSSTransition>\n            </TransitionGroup>\n        </ResultQuote>)\n        :<Message>Elije marca, año y seguro.</Message>\n     );\n}\n\nResult.propTypes = {\n    quote: Proptypes.number.isRequired\n}\n \nexport default Result;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return ( \n        <div className=\"sk-folding-cube\">\n            <div className=\"sk-cube1 sk-cube\"></div>\n            <div className=\"sk-cube2 sk-cube\"></div>\n            <div className=\"sk-cube4 sk-cube\"></div>\n            <div className=\"sk-cube3 sk-cube\"></div>\n        </div>\n     );\n}\n \nexport default Spinner;","import React, {useState} from 'react';\nimport Header from './components/Header';\nimport styled from '@emotion/styled';\nimport Form from './components/Form';\nimport Resume from './components/Resume';\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\n\nconst Container = styled.div`\n  max-width:600px;\n  margin:0 auto;\n`;\n\nconst ContainerForm = styled.div`\n  background-color:#FFF;\n  padding:3rem;\n`;\n\n\nfunction App() {\n\n  const [resume,saveResume] = useState({\n    quote:0,\n    dates:{\n      brand:'',\n      year:'',\n      plan:''\n    }\n  });\n  const {dates,quote} = resume;\n\n  const[loading,saveLoading]=useState(false);\n\n  return (\n    <Container>\n      <Header \n        title='Cotizador de seguro'\n      />\n      <ContainerForm>\n        <Form \n          saveResume={saveResume}\n          saveLoading={saveLoading}\n        />\n        {loading ? <Spinner/>:null}\n        {!loading && dates ?\n          <Resume\n            dates={dates} \n          />\n        :null}\n        {!loading ? \n          <Result \n            quote={quote}\n          />: null\n        }\n      </ContainerForm>\n    </Container>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}